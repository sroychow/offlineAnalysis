UNAME    = $(shell uname)
EXE      = evtslctn
 
VPATH  = .:./interface
vpath %.h ./interface

CSUF   = cc
HSUF   = h
DICTC  = Dict.$(CSUF)
DICTH  = $(patsubst %.$(CSUF),%.h,$(DICTC))

#SRCS   = $(wildcard src/*.$(CSUF))
SRCS   = src/PhysicsObjects.cc src/AnaBase.cc src/AnaUtil.cc src/HZZ4lUtil.cc src/GenAnalysis.cc src/PhysicsObjSelector.cc src/EventSelection.cc src/evntSelection.cc 
OBJS   = $(patsubst %.$(CSUF), %.o, $(SRCS))

LDFLAGS  = -g
SOFLAGS  = -shared 
CXXFLAGS = -I./interface  -I./

CXX       = g++
CXXFLAGS += -g -Wall -Wno-deprecated -std=c++11

LIBS = 

HDRS = $(wildcard interface/*.$(HSUF))
# Add names of the header files which you do not want to create dictionary of
#HDRS_SKIP  = interface/AnaBase.h
#HDRS_DICT  = $(filter-out $(HDRS_SKIP),$(HDRS)) 
#HDRS_DICT += interface/LinkDef.h
HDRS_DICT = interface/PhysicsObjects.h interface/LinkDef.h

bin: $(EXE) 
all: 
	gmake cint 
	gmake bin 
cling: $(DICTC) 
 
$(DICTC): $(HDRS_DICT)
	@echo "Generating dictionary $(DICTC) and $(DICTH) ..."
	rootcling -f $@ -rmf interface/AnalysisSpaceTreeMaker_xr.rootmap -c $(CXXFLAGS) $^
	@mv $(DICTC) src/ 
	@mv Dict_rdict.pcm src/	 
$(EXE): $(OBJS) src/Dict.o
	$(CXX) $(LDFLAGS) $^ -o $@ $(LIBS) `root-config --libs`  -lTMVA 
 
# Create object files
%.o : %.$(CSUF)
	$(CXX) $(CXXFLAGS) `root-config --cflags` -o $@ -c $<

# makedepend
depend: $(SRCS:.$(CSUF)=.$(CSUF).dep)
	@cat $(notdir $^) > Makefile.dep
	@-rm -f $(notdir $^) $(patsubst %,%.bak,$(notdir $^))
%.dep:
	@touch $(notdir $@)
	rmkdepend -f$(notdir $@) -- $(CXXFLAGS) `root-config --cflags` -- $*
include Makefile.dep

# Clean 
.PHONY   : clean 
clean : 
	@-rm $(OBJS) $(EXE) src/$(DICTC) src/Dict.o

